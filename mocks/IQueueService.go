// Code generated by mockery v2.27.1. DO NOT EDIT.

package mocks

import (
	consttype "github.com/felixlambertv/go-cleanplate/pkg/consttype"
	mock "github.com/stretchr/testify/mock"
)

// IQueueService is an autogenerated mock type for the IQueueService type
type IQueueService struct {
	mock.Mock
}

// ReceiveMessage provides a mock function with given fields:
func (_m *IQueueService) ReceiveMessage() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SendMessage provides a mock function with given fields: messageBody, messageType
func (_m *IQueueService) SendMessage(messageBody string, messageType consttype.QueueType) error {
	ret := _m.Called(messageBody, messageType)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, consttype.QueueType) error); ok {
		r0 = rf(messageBody, messageType)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewIQueueService interface {
	mock.TestingT
	Cleanup(func())
}

// NewIQueueService creates a new instance of IQueueService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIQueueService(t mockConstructorTestingTNewIQueueService) *IQueueService {
	mock := &IQueueService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
