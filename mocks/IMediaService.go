// Code generated by mockery v2.27.1. DO NOT EDIT.

package mocks

import (
	context "context"

	request "github.com/felixlambertv/go-cleanplate/internal/controller/request"
	mock "github.com/stretchr/testify/mock"
)

// IMediaService is an autogenerated mock type for the IMediaService type
type IMediaService struct {
	mock.Mock
}

// UploadMedia provides a mock function with given fields: req, ctx
func (_m *IMediaService) UploadMedia(req request.MediaUploadRequest, ctx context.Context) (string, error) {
	ret := _m.Called(req, ctx)

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func(request.MediaUploadRequest, context.Context) (string, error)); ok {
		return rf(req, ctx)
	}
	if rf, ok := ret.Get(0).(func(request.MediaUploadRequest, context.Context) string); ok {
		r0 = rf(req, ctx)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(request.MediaUploadRequest, context.Context) error); ok {
		r1 = rf(req, ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewIMediaService interface {
	mock.TestingT
	Cleanup(func())
}

// NewIMediaService creates a new instance of IMediaService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIMediaService(t mockConstructorTestingTNewIMediaService) *IMediaService {
	mock := &IMediaService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
